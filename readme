Задание 4.1 - Сбор сведений о системе
Условие задания
Создайте bash скрипт ‘task4_1.sh’, который собирает базовую информацию об аппаратной части, операционной системе и конфигурации сетевых интерфейсов. В результате выполнения этого скрипта необходимо сформировать файл ‘task4_1.out’ следующего содержания:
--- Hardware ---
CPU: Intel xeon 2675
RAM: xxxx 
Motherboard: XXX XX / Unknown (здесь используйте вывод baseboard-manufacturer и baseboard-product-name. Если информация отсутствует - вывести Unknown )
System Serial Number: XXXXXX (здесь подразумевается вывод dmidecode -s system-serial-number)
--- System ---
OS Distribution: xxxxx (например Ubuntu 16.04.4 LTS)
Kernel version: xxxx (например 4.4.0-116-generic)
Installation date: xxxx
Hostname: yyyyy
Uptime: XX days
Processes running: 56684
Users logged in: 665
--- Network ---
<Iface #1 name>:  IP/mask
<Iface #2  name>:  IP/mask
…
<Iface #N  name>:  IP/mask

Дополнительные требования
Баш скрипт с выполненным заданием должен иметь название ‘task4_1.sh’
Баш скрипт ‘task4_1.sh’ должен быть загружен в гитхаб репозитарий c названием ‘task4_1’
Результаты выполнения скрипта должны быть записаны в файл ‘task4_1.out’
В файле ‘task4_1.out’ указанные разделы (т.е. Hardware, System, Network) и соответствующие параметры должны следовать строго в указанном порядке
Скрипт должен корректно собирать информацию о настройке сетевых интерфейсов системы, независимо от их количества. Для каждого интерфейса должна выводится информация об IP адресе и сетевой маске. Если для интерфейса не сконфигурирован IP адрес, в соответствующей строке выводить “-”

Проверка результатов:
Для каждого запуска будет использоваться отдельная ВМ (ОС ubuntu xenial 16.04 server, образ). Т.е. считайте, что до вас никто ничего не настраивал. Скрипт будет запущен из-под суперпользователя (root). ВМ имеет доступ в интернет.
В ВМ будет склонирован репозиторий с заданием ( например https://github.com/user/task4_1, если репозиторий будет иметь другое имя, то задание будет автоматически помечено как невыполненное.
Автоматически будет запущен скрипт  ‘task4_1.sh’ из корневой папки репозитория (если скрипт будет называться иначе или будет находиться в подпапке - он запущен не будет, соответственно, задание будет автоматически помечено как невыполненное)
Результат выполнения должен быть записан в ту же папку, где находится запущенный скрипт и иметь имя ‘task4_1.out’. Если файл с выводом будет создан в другом месте, либо будет иметь имя, отличное от ‘task4_1.out’, то задание будет автоматически помечено как невыполненное.
Файл ‘task4_1.out’ должен соответствовать заданной структуре. Если у вас будут лишние пустые строки (например между CPU и RAM), то проверка на синтаксис вернет ошибку и задание будет автоматически помечено как невыполненное.
Проверка полей:
СPU: одна строка. Должна содержать производителя процессора и модель. Допускается наличие дополнительной информации: частота, количество ядер, символы (R) и т.п.
RAM: ожидается строка, содержащая цифры и единицы измерения  (KB, MB, GB - в верхнем регистре), допускается пробел между значением и единицами измерения: 45600KB, 512 MB и т.д. 100% соответствие с физической памятью не обязательно (например, часть памяти, выделенную под видео, можно не учитывать)
Motherboard: производитель (опционально) и модель материнской платы. Если не удалось получить эти данные, скрипт должен выводить Unknown. 
Motherboard: ASUSTeK COMPUTER INC. P8Z77-M PRO
Motherboard: P8Z77-M PRO
Motherboard: ASUSTeK COMPUTER INC. Unknown
Motherboard: Unknown
System Serial Number: должен содержать System Serial Number. Если не удалось получить этот параметр, то скрипт должен вывести Unknown.
System Serial Number: S15747127820237
System Serial Number: Unknown
OS Distribution: должен содержать информацию о поставщике дистрибутива, его версии и, опционально, кодовом имени дистрибутива. Одна строка, допускается наличие пробелов, цифр, букв верхнего и нижнего регистра.
Kernel version: должен содержать версию ядра. Одна строка, без пробелов.
Installation date: примерное время установки системы. Требования к формату даты: human-readable и должен быть распознан как корректный командой “date -d <date>”. Например:
Installation date: Tue Mar 27 14:40:35 UTC 2018
Installation date: 03/27/2018
Installation date: Mar 27 2018
Hostname:  FQDN ВМ. Одна строка, без пробелов. Допустимые символы: a-z, A-Z, 0-9, дефис и точки
Uptime: сколько времени прошло с момента последнего запуска с точностью до минут. Строка должна содержать только цифры, пробелы, слова “weeks”, “days”, “hours”, “minutes” и запятые. Пример формат вывода:
Uptime: 2 minutes
Uptime: 5 weeks, 4 days, 2 hours, 25 minutes
Uptime: 5 hours 2 minutes
Processes running: число процессов, присутствующих в системе на момент запуска скрипта. Может содержать только цифры. Процесс скрипта и все его дочерние (если есть) также должны учитываются.
Users logged in: количество пользователей, имеющих незакрытые сессии на момент запуска скрипта. Число.
Вывод настроек сетевых интерфейсов. Может содержать несколько строк. Для каждого сетевого интерфейса (включая loopback, vlan, tap и т.д.) в системе должны быть указаны настроенные сетевые адреса IPv4 в формате A.B.C.D/MASK. Если интерфейс не имеет назначенного IP адреса четвертной версии, то должен быть указан дефис (“-”). Для каждого интерфейса строка с адресом может содержать только цифры, точки, пробелы, символы “/”  и “-” и запятые. Например:
--- NETWORK ---
lo: 127.0.0.1/8
enp0s3: 192.168.1.37/24, 10.255.215.47/8
virbr0: 192.168.122.1/24
virbr0-nic: -
Для всех пунктов обязательным форматом вывода является <имя параметра><двоеточие><пробел><собранные данные>. Если пробелов после двоеточия будет больше чем один, файл ‘task4_1.out’ не пройдет проверку синтаксиса и задание будет помечено как невыполненное. Если имя обязательного поля записано в формате, отличного от предложенного (включая регистр), произойдет то же самое. Если в пунктах, где строго оговорен набор допустимых символов, будут неразрешенные символы - задание будет считаться невыполненным. 
Скрипт может быть запущен несколько раз подряд. После каждого повторного запуска будет выполняться проверка файла ‘task4_1.out’  на соответствие оговоренному шаблону.

